openapi: 3.0.3
info:
  title: REST API for restApiJWT
  description: This is the REST API endpoints definition for restApiJWT project
  version: 0.1.0
  contact:
    email: yuriydyachuk91@gmail.com
servers:
  - url: 'https://localhost:3003/api'
    description: Local server

paths:
  /auth/login:
    post:
      tags:
        - Auth
      summary: 'User login'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                  default: test@example.com
                password:
                  type: string
                  default: password
              required:
                - email
                - password
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Login'

  /auth/register:
    post:
      tags:
        - Auth
      summary: 'User Registration'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  default: Ivan
                email:
                  type: string
                  default: ivan@example.com
                password:
                  type: string
                  default: password
              required:
                - name
                - email
                - password
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Register'

  /logout:
    get:
      tags:
        - Auth
      summary: 'User logout'
      parameters:
        - in: query
          name: token
          schema:
            type: string
          required: true
          description: 'Token for logout user in services'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/components/schemas/Logout'

# COMPONENTS #

components:
  schemas:

    # AUTH COMPONENTS #

    Login:
      type: object
      properties:
        status:
          type: boolean
          example: true
        token:
          type: string
          example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczpcL1wvbG9jYWxob3N0OjMwMDNcL2FwaVwvYXV0aFwvbG9naW4iLCJpYXQiOjE2NTA2MzA4NzcsImV4cCI6MTY1MDYzNDQ3NywibmJmIjoxNjUwNjMwODc3LCJqdGkiOiJmQ2JmcFhYRE52MnBoMTBmIiwic3ViIjo4LCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.vaPOAkmp9WwhzrFv2PQGvLZleYtuVlskEuN7oSfQzk4

    Register:
      type: object
      properties:
        id:
          type: integer
          example: 8
        name:
          type: string
          example: Felipe Prosacco
        email:
          type: string
          example: aklein@example.com

    Logout:
      type: object
      properties:
        status:
          type: boolean
          example: true
        message:
          type: string
          example: User has been logged out


  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []